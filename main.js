!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){return this._hasInvalidInput(this._inputEls)?this._disableButton():this._enableButton()}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},t=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getCardElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._deleteCard=this._element.querySelector(".card__trash-button"),this._cardImage=this._element.querySelector(".card__image"),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteCard.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._element.remove(),this._element=null}getView(){return this._element=this._getCardElement(),this._setEventListeners(),this._element.querySelector(".card__title").textContent=this._name,this._cardImage.alt=this._name,this._cardImage.src=this._link,this._element}},s=class{constructor(e){this._popupElement=document.querySelector(e),this._handleEscEvent=this._handleEscEvent.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscEvent)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscEvent)}_handleEscEvent(e){e.preventDefault(),"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}},n=class extends s{constructor(e,t){super(e),this._submitHandler=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__form-input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues())})),super.setEventListeners()}};const r="cards__list",i="#card-template",o=(document.querySelector("#card-template").content.firstElementChild,document.forms["edit-profile-form"],document.querySelector("#profile-edit-button")),a=(document.querySelector("#profile-edit-modal").querySelector(".modal__close"),document.querySelector(".profile__heading"),document.querySelector(".profile__description"),document.querySelector("#profile-heading-input"),document.querySelector("#profile-description-input"),document.forms["add-card-form"]),l=document.querySelector("#card-add-button"),c=(document.querySelector("#card-add-modal").querySelector(".modal__close"),document.querySelector(".cards__list"),document.querySelector("#preview-image-modal"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__image-title"),document.querySelector(".modal__close_type_preview"),{});var u;u={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},Array.from(document.querySelectorAll(u.formSelector)).forEach((t=>{const s=new e(u,t),n=t.getAttribute("name");c[n]=s,s.enableValidation()}));const d=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(e){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=E(e);return d.addItem(t),t}},`.${r}`),m=new class{constructor(e){let{nameSelector:t,aboutSelector:s}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about}}({nameSelector:".profile__heading",aboutSelector:".profile__description"}),_=new n("#profile-edit-modal",(function(e){m.setUserInfo(e),_.close()})),h=new n("#card-add-modal",(function(e){const t=E(e);d.addItem(t),h.close()})),p=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__preview-image"),this._imageText=this._popupElement.querySelector(".modal__image-title")}open(e){this._imageText.textContent=e.name,this._image.alt=e.name,this._image.src=e.link,super.open()}}("#preview-image-modal");function E(e){return new t(e,i,v).getView()}function v(e){p.open(e)}d.renderItems(),_.setEventListeners(),h.setEventListeners(),p.setEventListeners(),o.addEventListener("click",(()=>{_.open(),function(){const e=m.getUserInfo();_.setInputValues(e)}()})),l.addEventListener("click",(()=>{c[a.getAttribute("name")].resetValidation(),h.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,